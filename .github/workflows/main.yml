name: Continuous Integration and Delivery

on: [push]

jobs:
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set img urls
        run: |
          WEB_IMAGE="ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/web"
          NGINX_IMAGE="ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/nginx"
          echo "WEB_IMAGE=$WEB_IMAGE" >> $GITHUB_ENV
          echo "NGINX_IMAGE=$NGINX_IMAGE" >> $GITHUB_ENV
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo DEBUG=0 >> .env.prod
          echo SQL_ENGINE=django.db.backends.postgresql >> .env.prod
          echo DATABASE=${{ secrets.DATABASE }} >> .env.prod
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env.prod
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env.prod
          echo DB_USER=${{ secrets.DB_USER }} >> .env.prod
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env.prod
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env.prod
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env.prod
          echo WEB_IMAGE=${{ env.WEB_IMAGE }} >> .env.prod
          echo NGINX_IMAGE=${{ env.NGINX_IMAGE }} >> .env.prod
          echo NAMESPACE=${{ secrets.NAMESPACE }} >> .env.prod
          echo PERSONAL_ACCESS_TOKEN=${{ secrets.PERSONAL_ACCESS_TOKEN }} >> .env.prod
      - name: Add the private SSH key to the ssh-agent
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-add - <<< "${{ secrets.PRIVATE_KEY }}"
      - name: Build and deploy images on DigitalOcean
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          scp  -o StrictHostKeyChecking=no -r ./.env.prod ./compose.prod.yml root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }}:/smileInflatables
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DIGITAL_OCEAN_IP_ADDRESS }} << 'ENDSSH'
            cd /smileInflatables
            source .env.prod
            cat .env.prod
            docker login ghcr.io -u $NAMESPACE -p $PERSONAL_ACCESS_TOKEN
            docker pull $WEB_IMAGE
            docker pull $NGINX_IMAGE
            docker-compose -f compose.prod.yml up -d
          ENDSSH
